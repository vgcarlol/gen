# AUTO-GENERADO: Analizador l√©xico basado en AFD

def analizar(texto):
    transitions = {
        ('S0', 'a'): 'S1',
        ('S0', '9'): 'S2',
        ('S0', 'A'): 'S3',
        ('S0', '-'): 'S4',
        ('S0', 'z'): 'S5',
        ('S0', '/'): 'S6',
        ('S0', '('): 'S7',
        ('S0', ';'): 'S8',
        ('S0', '_'): 'S9',
        ('S0', '.'): 'S10',
        ('S0', '0'): 'S11',
        ('S0', '<'): 'S12',
        ('S0', '='): 'S13',
        ('S0', 'E'): 'S14',
        ('S0', ')'): 'S15',
        ('S0', '*'): 'S16',
        ('S0', ':'): 'S17',
        ('S0', 'Z'): 'S18',
        ('S0', '+'): 'S19',
        ('S1', 'a'): 'S20',
        ('S1', '9'): 'S21',
        ('S1', 'A'): 'S22',
        ('S1', '-'): 'S23',
        ('S1', 'z'): 'S5',
        ('S1', '_'): 'S9',
        ('S1', '0'): 'S22',
        ('S1', 'Z'): 'S24',
        ('S2', 'a'): 'S20',
        ('S2', '9'): 'S25',
        ('S2', 'A'): 'S22',
        ('S2', '-'): 'S26',
        ('S2', 'z'): 'S27',
        ('S2', '_'): 'S9',
        ('S2', '.'): 'S10',
        ('S2', '0'): 'S28',
        ('S2', 'E'): 'S14',
        ('S2', 'Z'): 'S24',
        ('S3', 'a'): 'S1',
        ('S3', '9'): 'S21',
        ('S3', 'A'): 'S22',
        ('S3', '-'): 'S29',
        ('S3', 'z'): 'S5',
        ('S3', '_'): 'S9',
        ('S3', '0'): 'S22',
        ('S3', 'Z'): 'S18',
        ('S4', 'a'): 'S1',
        ('S4', '9'): 'S2',
        ('S4', 'A'): 'S22',
        ('S4', '-'): 'S30',
        ('S4', 'z'): 'S5',
        ('S4', '_'): 'S9',
        ('S4', '.'): 'S10',
        ('S4', '0'): 'S28',
        ('S4', 'E'): 'S14',
        ('S4', 'Z'): 'S18',
        ('S5', 'a'): 'S20',
        ('S5', '9'): 'S21',
        ('S5', 'A'): 'S22',
        ('S5', '-'): 'S31',
        ('S5', 'z'): 'S27',
        ('S5', '_'): 'S9',
        ('S5', '0'): 'S22',
        ('S5', 'Z'): 'S24',
        ('S9', 'a'): 'S20',
        ('S9', '9'): 'S21',
        ('S9', 'A'): 'S22',
        ('S9', '-'): 'S31',
        ('S9', 'z'): 'S27',
        ('S9', '_'): 'S9',
        ('S9', '0'): 'S22',
        ('S9', 'Z'): 'S24',
        ('S10', '9'): 'S32',
        ('S10', '-'): 'S33',
        ('S10', '0'): 'S34',
        ('S10', 'E'): 'S14',
        ('S11', 'a'): 'S20',
        ('S11', '9'): 'S2',
        ('S11', 'A'): 'S22',
        ('S11', '-'): 'S35',
        ('S11', 'z'): 'S27',
        ('S11', '_'): 'S9',
        ('S11', '.'): 'S10',
        ('S11', '0'): 'S28',
        ('S11', 'E'): 'S14',
        ('S11', 'Z'): 'S24',
        ('S14', '\\'): 'S36',
        ('S14', '9'): 'S37',
        ('S14', '-'): 'S38',
        ('S14', '0'): 'S39',
        ('S17', '='): 'S40',
        ('S18', 'a'): 'S1',
        ('S18', '9'): 'S21',
        ('S18', 'A'): 'S22',
        ('S18', '-'): 'S23',
        ('S18', 'z'): 'S5',
        ('S18', '_'): 'S9',
        ('S18', '0'): 'S22',
        ('S18', 'Z'): 'S24',
        ('S20', 'a'): 'S20',
        ('S20', '9'): 'S21',
        ('S20', 'A'): 'S22',
        ('S20', '-'): 'S31',
        ('S20', 'z'): 'S27',
        ('S20', '_'): 'S9',
        ('S20', '0'): 'S22',
        ('S20', 'Z'): 'S24',
        ('S21', 'a'): 'S20',
        ('S21', '9'): 'S21',
        ('S21', 'A'): 'S22',
        ('S21', '-'): 'S31',
        ('S21', 'z'): 'S27',
        ('S21', '_'): 'S9',
        ('S21', '0'): 'S22',
        ('S21', 'Z'): 'S24',
        ('S22', 'a'): 'S20',
        ('S22', '9'): 'S21',
        ('S22', 'A'): 'S22',
        ('S22', '-'): 'S31',
        ('S22', 'z'): 'S27',
        ('S22', '_'): 'S9',
        ('S22', '0'): 'S22',
        ('S22', 'Z'): 'S24',
        ('S23', 'a'): 'S20',
        ('S23', '9'): 'S21',
        ('S23', 'A'): 'S22',
        ('S23', '-'): 'S31',
        ('S23', 'z'): 'S5',
        ('S23', '_'): 'S9',
        ('S23', '0'): 'S22',
        ('S23', 'Z'): 'S24',
        ('S24', 'a'): 'S20',
        ('S24', '9'): 'S21',
        ('S24', 'A'): 'S22',
        ('S24', '-'): 'S31',
        ('S24', 'z'): 'S27',
        ('S24', '_'): 'S9',
        ('S24', '0'): 'S22',
        ('S24', 'Z'): 'S24',
        ('S25', 'a'): 'S20',
        ('S25', '9'): 'S25',
        ('S25', 'A'): 'S22',
        ('S25', '-'): 'S26',
        ('S25', 'z'): 'S27',
        ('S25', '_'): 'S9',
        ('S25', '.'): 'S10',
        ('S25', '0'): 'S28',
        ('S25', 'E'): 'S14',
        ('S25', 'Z'): 'S24',
        ('S26', 'a'): 'S20',
        ('S26', '9'): 'S25',
        ('S26', 'A'): 'S22',
        ('S26', '-'): 'S26',
        ('S26', 'z'): 'S27',
        ('S26', '_'): 'S9',
        ('S26', '.'): 'S10',
        ('S26', '0'): 'S28',
        ('S26', 'E'): 'S14',
        ('S26', 'Z'): 'S24',
        ('S27', 'a'): 'S20',
        ('S27', '9'): 'S21',
        ('S27', 'A'): 'S22',
        ('S27', '-'): 'S31',
        ('S27', 'z'): 'S27',
        ('S27', '_'): 'S9',
        ('S27', '0'): 'S22',
        ('S27', 'Z'): 'S24',
        ('S28', 'a'): 'S20',
        ('S28', '9'): 'S25',
        ('S28', 'A'): 'S22',
        ('S28', '-'): 'S26',
        ('S28', 'z'): 'S27',
        ('S28', '_'): 'S9',
        ('S28', '.'): 'S10',
        ('S28', '0'): 'S28',
        ('S28', 'E'): 'S14',
        ('S28', 'Z'): 'S24',
        ('S29', 'a'): 'S1',
        ('S29', '9'): 'S21',
        ('S29', 'A'): 'S22',
        ('S29', '-'): 'S23',
        ('S29', 'z'): 'S5',
        ('S29', '_'): 'S9',
        ('S29', '0'): 'S22',
        ('S29', 'Z'): 'S18',
        ('S30', 'a'): 'S20',
        ('S30', '9'): 'S25',
        ('S30', 'A'): 'S22',
        ('S30', '-'): 'S26',
        ('S30', 'z'): 'S5',
        ('S30', '_'): 'S9',
        ('S30', '.'): 'S10',
        ('S30', '0'): 'S28',
        ('S30', 'E'): 'S14',
        ('S30', 'Z'): 'S24',
        ('S31', 'a'): 'S20',
        ('S31', '9'): 'S21',
        ('S31', 'A'): 'S22',
        ('S31', '-'): 'S31',
        ('S31', 'z'): 'S27',
        ('S31', '_'): 'S9',
        ('S31', '0'): 'S22',
        ('S31', 'Z'): 'S24',
        ('S32', '9'): 'S41',
        ('S32', '-'): 'S42',
        ('S32', '0'): 'S43',
        ('S32', 'E'): 'S14',
        ('S33', '9'): 'S32',
        ('S33', '-'): 'S42',
        ('S33', '0'): 'S43',
        ('S33', 'E'): 'S14',
        ('S34', '9'): 'S32',
        ('S34', '-'): 'S33',
        ('S34', '0'): 'S43',
        ('S34', 'E'): 'S14',
        ('S35', 'a'): 'S20',
        ('S35', '9'): 'S2',
        ('S35', 'A'): 'S22',
        ('S35', '-'): 'S26',
        ('S35', 'z'): 'S27',
        ('S35', '_'): 'S9',
        ('S35', '.'): 'S10',
        ('S35', '0'): 'S28',
        ('S35', 'E'): 'S14',
        ('S35', 'Z'): 'S24',
        ('S36', '\\'): 'S44',
        ('S36', '9'): 'S37',
        ('S36', '-'): 'S45',
        ('S36', '0'): 'S39',
        ('S37', '9'): 'S46',
        ('S37', '-'): 'S47',
        ('S37', '0'): 'S48',
        ('S38', '9'): 'S37',
        ('S38', '-'): 'S47',
        ('S38', '0'): 'S48',
        ('S39', '9'): 'S37',
        ('S39', '-'): 'S38',
        ('S39', '0'): 'S48',
        ('S41', '9'): 'S41',
        ('S41', '-'): 'S42',
        ('S41', '0'): 'S43',
        ('S41', 'E'): 'S14',
        ('S42', '9'): 'S41',
        ('S42', '-'): 'S42',
        ('S42', '0'): 'S43',
        ('S42', 'E'): 'S14',
        ('S43', '9'): 'S41',
        ('S43', '-'): 'S42',
        ('S43', '0'): 'S43',
        ('S43', 'E'): 'S14',
        ('S44', '\\'): 'S44',
        ('S44', '9'): 'S37',
        ('S44', '-'): 'S45',
        ('S44', '0'): 'S39',
        ('S45', '9'): 'S37',
        ('S45', '-'): 'S38',
        ('S45', '0'): 'S39',
        ('S46', '9'): 'S46',
        ('S46', '-'): 'S47',
        ('S46', '0'): 'S48',
        ('S47', '9'): 'S46',
        ('S47', '-'): 'S47',
        ('S47', '0'): 'S48',
        ('S48', '9'): 'S46',
        ('S48', '-'): 'S47',
        ('S48', '0'): 'S48',
    }

    accepting = {
        'S0': 'WHITESPACE',
        'S1': 'ID',
        'S2': 'ID',
        'S3': 'ID',
        'S4': 'ID',
        'S5': 'ID',
        'S6': 'DIV',
        'S7': 'LPAREN',
        'S8': 'SEMICOLON',
        'S9': 'ID',
        'S10': 'NUMBER',
        'S11': 'ID',
        'S12': 'LT',
        'S13': 'EQ',
        'S14': 'NUMBER',
        'S15': 'RPAREN',
        'S16': 'TIMES',
        'S18': 'ID',
        'S19': 'PLUS',
        'S20': 'ID',
        'S21': 'ID',
        'S22': 'ID',
        'S23': 'ID',
        'S24': 'ID',
        'S25': 'ID',
        'S26': 'ID',
        'S27': 'ID',
        'S28': 'ID',
        'S29': 'ID',
        'S30': 'ID',
        'S31': 'ID',
        'S32': 'NUMBER',
        'S33': 'NUMBER',
        'S34': 'NUMBER',
        'S35': 'ID',
        'S36': 'NUMBER',
        'S37': 'NUMBER',
        'S38': 'NUMBER',
        'S39': 'NUMBER',
        'S40': 'ASSIGNOP',
        'S41': 'NUMBER',
        'S42': 'NUMBER',
        'S43': 'NUMBER',
        'S44': 'NUMBER',
        'S45': 'NUMBER',
        'S46': 'NUMBER',
        'S47': 'NUMBER',
        'S48': 'NUMBER',
    }

    estado_inicial = 'S0'

    tokens = []
    i = 0
    while i < len(texto):
        estado_actual = estado_inicial
        lexema = ''
        ultimo_token = None
        ultimo_index = i

        j = i
        while j < len(texto):
            c = texto[j]
            if (estado_actual, c) in transitions:
                estado_actual = transitions[(estado_actual, c)]
                lexema += c
                if estado_actual in accepting:
                    ultimo_token = (lexema, accepting[estado_actual])
                    ultimo_index = j + 1
                j += 1
            else:
                break

        if ultimo_token:
            tokens.append(ultimo_token)
            i = ultimo_index
        else:
            tokens.append((texto[i], 'ERROR'))
            i += 1

    return tokens

if __name__ == '__main__':
    with open('input/random_data_3.txt', 'r', encoding='utf-8') as file:
        contenido = file.read()
        resultado = analizar(contenido)

    with open('output/tokens.txt', 'w', encoding='utf-8') as out:
        for lexema, token in resultado:
            out.write(f"{lexema} -> {token}\n")
